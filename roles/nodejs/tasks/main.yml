---
- name: Install prerequisites
  apt:
    name:
      - apt-transport-https
      - gnupg
      - git
    state: present
    update_cache: yes

- name: Add NodeSource GPG key
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present

- name: Add NodeSource repository
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_{{ nodejs_version }}.x {{ ansible_distribution_release }} main"
    state: present
    filename: nodesource

- name: Install Node.js and npm
  apt:
    name: nodejs
    state: present
    update_cache: yes

- name: Create application directory
  file:
    path: "{{ app_root }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'

- name: Clone NodeJs repository for user
  git:
    repo: "{{ repository_url_user }}"
    dest: "{{ app_root }}"
    version: "{{ git_branch | default('main') }}"
    force: true
  become_user: "{{ app_user }}"
  when: inventory_hostname == 'api-user'

- name: Clone NodeJs repository for admin
  git:
    repo: "{{ repository_url_admin }}"
    dest: "{{ app_root }}"
    version: "{{ git_branch | default('main') }}"
    force: true
  become_user: "{{ app_user }}"
  when: inventory_hostname == 'api-admin'

- name: Install npm dependencies
  npm:
    path: "{{ app_root }}"
    state: present
  become_user: "{{ app_user }}"

- name: Create environment files for user
  template:
    src: env.user.j2
    dest: "{{ app_root }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0644'
  become_user: "{{ app_user }}"
  when: inventory_hostname == 'api-user'

- name: Create environment files for admin
  template:
    src: env.admin.j2
    dest: "{{ app_root }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0644'
  become_user: "{{ app_user }}"
  when: inventory_hostname == 'api-admin'

- name: Install pm2
  ansible.builtin.shell: npm i pm2 -g
  args:
    chdir: "{{ app_root }}"

- name: Ensure certbot is installed
  package:
    name: certbot
    state: present

- name: Generate SSL certificate using certbot
  command: >
    certbot certonly --standalone --agree-tos --no-eff-email
    --email maxime.heim3@gmail.com
    --domain easysetup.fr
  register: certbot_output
  args:
    creates: /etc/letsencrypt/live/easysetup.fr/fullchain.pem

- name: Copy private key to the desired location
  copy:
    src: /etc/letsencrypt/live/easysetup.fr/privkey.pem
    dest: /root/nodejs-app/certificates/privkey.pem
    mode: '0600'

- name: Copy fullchain certificate to the desired location
  copy:
    src: /etc/letsencrypt/live/easysetup.fr/fullchain.pem
    dest: /root/nodejs-app/certificates/fullchain.pem
    mode: '0600'

- name: Ensure ownership of the certificate files
  file:
    path: "/root/nodejs-app/certificates/{{ item }}"
    owner: root
    group: root
    mode: '0600'
  loop:
    - privkey.pem
    - fullchain.pem

- name: Start app using pm2
  ansible.builtin.shell: pm2 start bin/www -f
  args:
    chdir: "{{ app_root }}"
